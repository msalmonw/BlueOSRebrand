name: Test, Build and Deploy Images

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

on:
    workflow_dispatch:
    pull_request:
    push:
    schedule:
    # Run every 6 days to keep our caches alive
    - cron: '0 0 */6 * *'

jobs:
  python-tests:
    runs-on: ubuntu-latest

    env:
      python-version: 3.11 # Our base image has Python 3.11

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get install --no-install-recommends --assume-yes shellcheck parallel
        python -m pip install --upgrade pip
        pip install poetry

    - name: Run tests
      run: |
        .hooks/pre-push

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: htmlcov


  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.3

      - name: Bun install
        run: bun install --cwd ./core/frontend

      - name: Bun lint
        run: bun --cwd ./core/frontend lint

      - name: Bun build
        run: bun run --cwd ./core/frontend build

  deploy-raspberry-image:
    needs: [frontend-tests, python-tests]
    if: github.event_name != 'pull_request' && github.repository_owner == 'msalmonw'
    timeout-minutes: 180 # Detect if it gets into an infinite loop or some unexpected state
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platforms: ["linux/arm/v7"]

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip qemu-user-static binfmt-support

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Pimod Build
        run: |
          VERSION=$GITHUB_REPOSITORY
          VERSION=${VERSION:-master}
          wget https://raw.githubusercontent.com/Nature40/pimod/master/pimod.sh && chmod +x pimod.sh
          docker run --rm --privileged \
            -v $PWD:/files \
            -e PATH=/pimod:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
            -e GITHUB_REPOSITORY=$GITHUB_REPOSITORY \
            -e VERSION=$GITHUB_REF_NAME \
            --workdir=/files \
            --platform ${{ matrix.platforms }} nature40/pimod:latest pimod.sh deploy/pimod/blueos.Pifile

      - name: Zip image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          zip BlueOS-raspberry.zip deploy/pimod/blueos.img

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BlueOS-raspberry.zip
          path: deploy/pimod/blueos.img
          if-no-files-found: error
          retention-days: 7

      - name: Upload raspberry image for release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: BlueOS-raspberry.zip
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: true

      - name: Cleanup
        if: ${{ always() }}
        run: sudo rm -rf .cache
